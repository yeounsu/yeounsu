/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-04-01 05:17:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.onedaybacking;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class panel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "top.jsp", out, false);
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<title>강의 등록</title>\r\n");
      out.write("	<link href=\"panel.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("	<style>\r\n");
      out.write("		.step-section {\r\n");
      out.write("			display: none;\r\n");
      out.write("		}\r\n");
      out.write("		.step-section.active {\r\n");
      out.write("			display: block;\r\n");
      out.write("		}\r\n");
      out.write("		.detailcontainer {\r\n");
      out.write("			display: grid;\r\n");
      out.write("			grid-template-columns: repeat(2, 1fr); \r\n");
      out.write("			grid-gap: 10px; \r\n");
      out.write("			border: 1px solid #ccc;\r\n");
      out.write("			width: 700px;\r\n");
      out.write("			left: 100px;'\r\n");
      out.write("			border-color: #E7DBCC; \r\n");
      out.write("			border-radius: 5px;\r\n");
      out.write("		}\r\n");
      out.write("		.detailitem {\r\n");
      out.write("			display: flex;\r\n");
      out.write("			align-items: center;\r\n");
      out.write("			margin-top: 15px;\r\n");
      out.write("			margin-bottom: 15px;\r\n");
      out.write("		}\r\n");
      out.write("		.button-container2 {\r\n");
      out.write("			text-align: center;\r\n");
      out.write("			justify-content: center;\r\n");
      out.write("			align-items: center;\r\n");
      out.write("		}\r\n");
      out.write("		.custom-button {\r\n");
      out.write("			padding: 10px 70px;\r\n");
      out.write("			display: inline-block;\r\n");
      out.write("			margin: 0 auto;\r\n");
      out.write("			background-color: #884A01; \r\n");
      out.write("			color: white;\r\n");
      out.write("			border: 1px solid #884A01;\r\n");
      out.write("			border-radius: 10px;\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"button-container\">\r\n");
      out.write("            <button id=\"btnPanel1\" onclick=\"showPanel('panel1', 'btnPanel1')\">강의 등록</button>\r\n");
      out.write("            <button id=\"btnPanel2\" onclick=\"showPanel('panel2', 'btnPanel2')\">강사 등록</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"panel1\" class=\"panel-container active\">\r\n");
      out.write("			<div id=\"step1\" class=\"step-section active\">\r\n");
      out.write("    			\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- step 2 -->\r\n");
      out.write("			<div class=\"step-section\" id=\"step2\"> \r\n");
      out.write("				<form id=\"step2Form\" onsubmit=\"return false;\">\r\n");
      out.write("					\r\n");
      out.write("				</form>\r\n");
      out.write("			\r\n");
      out.write("			</div>\r\n");
      out.write("		</div><!-- panel1 div -->\r\n");
      out.write("		\r\n");
      out.write("        <!-- 강사 등록하기 패널에 해당 jsp 파일 추가한 것. 이후 수정 필요 -->\r\n");
      out.write("		<div id=\"panel2\" class=\"panel-container\">\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			<script>\r\n");
      out.write("				\r\n");
      out.write("			</script>\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("			\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("		function showPanel(panelId, buttonId) {\r\n");
      out.write("			var panels = document.querySelectorAll('.panel-container');\r\n");
      out.write("			panels.forEach(function(panel) {\r\n");
      out.write("			    panel.classList.remove('active');\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			var buttons = document.querySelectorAll('.button-container button');\r\n");
      out.write("			buttons.forEach(function(button) {\r\n");
      out.write("			    button.classList.remove('active');\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			var currentPanel = document.getElementById(panelId);\r\n");
      out.write("			currentPanel.classList.add('active');\r\n");
      out.write("			\r\n");
      out.write("			var currentButton = document.getElementById(buttonId);\r\n");
      out.write("			currentButton.classList.add('active');\r\n");
      out.write("		}\r\n");
      out.write("		</script>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
