/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-04-01 08:34:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.onedaybacking;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class testProc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      onedaybacking.ClassBean bean = null;
      bean = (onedaybacking.ClassBean) _jspx_page_context.getAttribute("bean", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (bean == null){
        bean = new onedaybacking.ClassBean();
        _jspx_page_context.setAttribute("bean", bean, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");

	String classname = request.getParameter("classname");
	String classteacherinfo = request.getParameter("classteacherinfo");
	String offercontent = request.getParameter("offercontent");
	String categorygroup = request.getParameter("categorygroup");
	String categoryname = request.getParameter("categoryname");
	String classtime = request.getParameter("classtime");
	String address = request.getParameter("address");
	String addressdetail = request.getParameter("addressdetail");
	String classlevel = request.getParameter("classlevel");
	String classimg1 = request.getParameter("classimg1");
	String classimg2 = request.getParameter("classimg2");
	String classimg3 = request.getParameter("classimg3");
	String classimg4 = request.getParameter("classimg4");
	String classimg5 = request.getParameter("classimg5");
	String classcontent = request.getParameter("classcontent");
	String classteacherimg = request.getParameter("classteacherimg");
	String roomimg1 = request.getParameter("roomimg1");
	String rommimg2 = request.getParameter("rommimg2");
	String[] checkedItems = request.getParameterValues("classstatus");
	String classmin = request.getParameter("classmin");
	String classmax = request.getParameter("classmax");
	String classprice = request.getParameter("classprice");

      out.write('\r');
      out.write('\n');
      out.print(classname );
      out.write("<br>\r\n");
      out.print(classteacherinfo );
      out.write("<br>\r\n");
      out.print(offercontent );
      out.write("<br>\r\n");
      out.print(categorygroup );
      out.write("<br>\r\n");
      out.print(categoryname );
      out.write("<br>\r\n");
      out.print(classtime );
      out.write("<br>\r\n");
      out.print(address );
      out.write("<br>\r\n");
      out.print(addressdetail );
      out.write("<br>\r\n");
      out.print(classlevel );
      out.write("<br>\r\n");
      out.print(classimg1 );
      out.write("<br>\r\n");
      out.print(classimg2 );
      out.write("<br>\r\n");
      out.print(classimg3 );
      out.write("<br>\r\n");
      out.print(classimg4 );
      out.write("<br>\r\n");
      out.print(classimg5 );
      out.write("<br>\r\n");
      out.print(classcontent );
      out.write("<br>\r\n");
      out.print(classteacherimg );
      out.write("<br>\r\n");
      out.print(roomimg1 );
      out.write("<br>\r\n");
      out.print(rommimg2 );
      out.write("<br>\r\n");
      out.print(classmin );
      out.write("<br>\r\n");
      out.print(classmax );
      out.write("<br>\r\n");
      out.print(classprice );
      out.write("<br>\r\n");
 for (String item : checkedItems) { 
      out.write("\r\n");
      out.write("    ");
      out.print(item );
      out.write('\r');
      out.write('\n');
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("id값 겹치는거 다 바꿔주는중!!!\r\n");
      out.write("step1까지 끝\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" -->\r\n");
      out.write(" \r\n");
      out.write(" ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
