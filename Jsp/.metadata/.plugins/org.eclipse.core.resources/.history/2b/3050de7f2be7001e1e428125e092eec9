package shop;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;

import javax.servlet.http.HttpServletRequest;

public class ProductMgr {

	private DBConnectionMgr pool;
	public static final String SAVEFOLDER = 
	"C:/Jsp/myapp/src/main/webapp/shop/data/";
	public static final String ENCODING = "UTF-8";
	public static final int MAXSIZE = 1024*1024*20;//20MB
	
	public ProductMgr() {
		pool = DBConnectionMgr.getInstance();
	}
	
	
	//Product List
	public Vector<ProductBean> getProductList(){
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String sql = null;
		Vector<ProductBean> vlist = new Vector<ProductBean>();
		try {
			con = pool.getConnection();
			sql = "select no, name, price, date, stock from tblProduct order by no desc";
			pstmt = con.prepareStatement(sql);
			rs = pstmt.executeQuery();
			while(rs.next()) {
				vlist.addElement(new ProductBean(
						rs.getInt("no"),
						rs.getInt("stock"),
						rs.getInt("price"),
						rs.getString("name"),
						null,
						rs.getString("date"),
						null));
//				ProductBean에 유징필드 사용했기때문에 이런식으로 가능
//				ProductBean pbean = new ProductBean();
//				pbean.setNo(rs.getInt(1));
//				pbean.setName(rs.getString(2));
//				pbean.setPrice(rs.getInt(3));
//				pbean.setDate(rs.getString(4));
//				pbean.setStock(rs.getInt(5));
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(con, pstmt, rs);
		}
		return vlist;
	}
	
	
	//Product Detail
	public ProductBean getProduct(int no) {
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String sql = null;
		ProductBean bean = null;
		try {
			con = pool.getConnection();
			sql = "select no, name, price, detail, date, stock, image from tblProduct where no=?";
			pstmt = con.prepareStatement(sql);
			pstmt.setInt(1, no);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				bean = new ProductBean(
						rs.getInt("no"),
						rs.getInt("stock"),
						rs.getInt("price"),
						rs.getString("name"),
						rs.getString("detail"),
						rs.getString("date"),
						rs.getString("image"));
//				ProductBean에 유징필드 사용했기때문에 이런식으로 가능
//				bean.setNo(rs.getInt(1));
//				bean.setName(rs.getString(1));
//				bean.setPrice(rs.getInt(1));
//				bean.setDetail(rs.getString(1));
//				bean.setDate(rs.getString(1));
//				bean.setStock(rs.getInt(1));
//				bean.setImage(rs.getString(1));
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(con, pstmt, rs);
		}
		return bean;
	}
	
	
	//Product Stock Reduce
	public void reduceProduct(OrderBean order) {
		Connection con = null;
		PreparedStatement pstmt = null;
		String sql = null;
		try {
			con = pool.getConnection();
			sql = "update tblProduct set stock = stock-? where no=?";
			pstmt = con.prepareStatement(sql);
			pstmt.setInt(1, order.getQuantity());	//주문수량
			pstmt.setInt(2, order.getNo());			//상품 번호
			pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(con, pstmt);
		}
	}
	
	
	/*--admin--*/
	
	//Product Insert : 상품저장
	//insert tblProduct(name,price,detail,date,stock,image)values(?,?,?,?,?,?)
	public boolean insertProduct(HttpServletRequest req) {}
	
	
	//Product Update : 이미지 수정 & 이미지 수정 x <- 게시판 수정 메소드 참고
	//update tblProduct set name=?, price=?, detail=?, stock=?, image=? where no=?"
		//update tblProduct set name=?, price=?, detail=?, stock=? where no=?
	public boolean updateProduct(HttpServletRequest req) {}
	
	
	//Product Delete : 상품제거(이미지는 삭제하지 않음)
	//delete from tblProduct where no=?
	public boolean deleteProduct(int no) {}

}
